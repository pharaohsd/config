# Gigamo <gigamo@gmail.com> (14/04/08)
# Configuration file for amazing (http://github.com/dag/amazing)
# This particular config will only work with development version of awesome (version 2.3.rc1.1 and up!)

# Widgets list begins here
widgets:
    # Screen
    0:
        # Battery
        top battery: # top = statusbarname, battery = widgetname
            type: battery
            interval: 20
            format: |
                normcol = "\n0 widget_tell #@identifier fg #a0a0a0"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"
                case @state
                when :charging
                  "text ^#{@percentage.to_i}^#{normcol}"
                when :discharging
                  if @percentage <= 25
                    "text v#{@percentage.to_i}v#{urgcol}"
                  else
                    "text v#{@percentage.to_i}v#{normcol}"
                  end
                when :charged
                  "text =#{@percentage.to_i}=#{normcol}"
                end
        # Volume progressbar
        top pb_vol:
            type: alsa
            interval: 4
            format: '"data master #@volume"'
        # Volume textbox
        top tb_vol:
            type: alsa
            interval: 4
            format: |
                normcol = "\n0 widget_tell #@identifier fg #a0a0a0"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"                
                if @volume == 0
                  "text  #{@volume}% #{urgcol}"
                else
                  "text  #{@volume}% #{normcol}"
                end
        # Memory progressbar
        top membar:
            type: memory
            interval: 10
            format: '"data mem #@usage"'
        # Memory textbox
        top tb_mem:
            type: memory
            interval: 10
            format: |
                normcol = "\n0 widget_tell #@identifier fg #a0a0a0"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"
                if @usage.to_i >= 75
                  "text  #{@usage.to_i}% #{urgcol}"
                else
                  "text  #{@usage.to_i}% #{normcol}"
                end
        # Clock
        top clock:
            type: clock
            interval: 1
            format: '"text #@time "'
            time_format: "%A, %d.%m.%Y %H:%M:%S"
        # CPU frequency
        top cpu_freq:
            type: cpu_info # Can also be cpu info or cpu-info
            interval: 3
            format: |
                normcol = "\n0 widget_tell #@identifier fg #a0a0a0"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"
                if @speed[0] >= 1000
                  ghz = @speed[0] / 1000
                  "text  %3.2f GHz #{urgcol}" % ghz
                else
                  "text  %d MHz #{normcol}" % @speed[0]
                end
        # GMail
        top mail:
            type: gmail 
            interval: 90
            format: |
                normcol = "\n0 widget_tell #@identifier fg #ffffff"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"
                if @count == 0
                  "text #@count#{normcol}"
                else
                  "text #@count#{urgcol}"
                end
            username: username
            password: password
        # Pacman updates
        top pacman:
            type: pacman
            interval: 3600
            format: |
                normcol = "\n0 widget_tell #@identifier fg #ffffff"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"
                if @count == 0
                  "text #@count#{normcol}"
                else
                  "text #@count#{urgcol}"
                end
        # CPU graph
        top cpugraph:
            type: cpu_usage
            interval: 2
            format: '"data cpu0 #{@usage[1]}"'
            cpu: 1
        # Download speed
        top down:
            type: nettraffic
            interval: 2
            format: |
                normcol = "\n0 widget_tell #@identifier fg #a0a0a0"
                urgcol = "\n0 widget_tell #@identifier fg #56ff56"
                if @down.to_i >= 1500
                  "text  %.1f #{urgcol}" % @download_rate
                else
                  "text  %.1f #{normcol}" % @download_rate
                end
            interface: wlan0
        # Upload speed
        top up:
            type: nettraffic
            interval: 2
            format: |
                normcol = "\n0 widget_tell #@identifier fg #a0a0a0"
                urgcol = "\n0 widget_tell #@identifier fg #ff5656"
                if @up.to_i >= 50
                  "text  %.1f#{urgcol}" % @upload_rate
                else
                  "text  %.1f#{normcol}" % @upload_rate
                end
            interface: wlan0
        # MPD
        top mpd:
            type: mpd
            interval: 1
            format: |
                case @state
                when :playing
                  "text >>: #@artist - #@title (#{@position}/#{@length})"
                when :paused
                  "text ||: #@artist - #@title (#{@position}/#{@length})"
                when :stopped
                  "text []: not playing"
                end
